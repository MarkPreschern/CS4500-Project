#!/usr/bin/python3

import unittest

from Fish.Common.tests.BoardTests import BoardTests
from Fish.Common.tests.TileTests import TileTests
from Fish.Common.tests.HoleTests import HoleTests
from Fish.Common.tests.AbstractTileTests import AbstractTileTests
from Fish.Common.tests.StateTests import StateTests
from Fish.Common.tests.AvatarTests import AvatarTests
from Fish.Common.tests.PlayerTests import PlayerTests


def _create_test_suite(test_cases: [unittest.TestCase]) -> unittest.TestSuite:
    """
    Creates a test suite based on provided test cases.
    :param test_cases: list of test cases to added to suite
    :return: resulting test suite
    """
    suite = unittest.TestSuite()

    # Add each test case to suite
    for case in test_cases:
        # Load tests of current test case
        case_tests = unittest.defaultTestLoader.loadTestsFromTestCase(case)
        # Add tests to suite
        suite.addTest(case_tests)

    return suite


if __name__ == '__main__':
    # Make up collection of test cases
    tests = [BoardTests, TileTests, HoleTests, AbstractTileTests, StateTests,
             AvatarTests, PlayerTests]

    # Make up runner to run suite
    runner = unittest.TextTestRunner()
    # Run suite
    result = runner.run(_create_test_suite(tests))

    # Determine # of tests passed
    tests_passed_no = result.testsRun - len(result.failures) \
                      - len(result.skipped) - len(result.errors)
    # Print results
    print(f'\nTotal: {result.testsRun} Passed: {tests_passed_no} Failed:'
          f' {len(result.errors + result.failures)}')
